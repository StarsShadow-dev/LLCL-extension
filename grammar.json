{
	"name": "llcl",
	"scopeName": "source.llcl",

	"patterns": [
		{
			"include": "#expression"
		}
	],
	"repository": {
		"expression": {
			"patterns": [
				{
					"include": "#keyword"
				},
				{
					"include": "#control_keyword"
				},
				{
					"include": "#number"
				},

				{
					"include": "#name"
				},
				
				{
					"include": "#scopeResolution"
				},

				{
					"include": "#type"
				},
				{
					"include": "#as"
				},

				{
					"include": "#line_comment"
				},
				{
					"include": "#block_comment"
				},
				{
					"include": "#double_quote_string"
				},

				{
					"include": "#operator"
				},

				{
					"include": "#semicolon"
				}
			]
		},
		
		"keyword": {
			"name": "keyword.constant.llcl",
			"match": "(true|false)"
		},
		"control_keyword": {
			"match": "(function|macro|return|var|import|if|else|while|struct|impl|public)[ \t\n;]",
			"captures": {
				"1": {
					"name": "keyword.control.llcl"
				}
			}
		},

		"name": {
			"name": "entity.name.llcl",
			"match": "[a-zA-Z_][a-zA-Z0-9\\_]*"
		},

		"number": {
			"name": "constant.numeric.llcl",
			"match": "[0-9]+"
		},
		
		"scopeResolution": {
			"name": "keyword.operator.scopeResolution.llcl",
			"match": "\\:\\:"
		},

		"type": {
			"match": "\\:\\s*([a-zA-Z_][a-zA-Z0-9_]*)",
			"captures": {
				"1": {
					"name": "storage.type.llcl"
				}
			}
		},
		
		"as": {
			"match": "\\s+(as)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
			"captures": {
				"1": {
					"name": "keyword.control.llcl"
				},
				"2": {
					"name": "storage.type.llcl"
				}
			}	
		},

		"line_comment": {
			"name": "comment.line.llcl",

			"begin": "//",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.comment.llcl"
				}
			},
			"end": "\n",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.comment.llcl"
				}
			}
		},
		"block_comment": {
			"name": "comment.block.llcl",

			"begin": "\/[*]",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.comment.llcl"
				}
			},
			"end": "[*](\/)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.comment.llcl"
				}
			}
		},

		"double_quote_string": {
			"name": "string.quoted.double.llcl",

			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.llcl"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.llcl"
				}
			}
		},

		"operator": {
			"name": "keyword.operator.arithmetic.llcl",
			"match": "(\\+|\\-|\\*|\\/)"
		},

		"semicolon": {
			"name": "punctuation.terminator.statement.llcl",
			"match": "\\;"
		}
	}
}